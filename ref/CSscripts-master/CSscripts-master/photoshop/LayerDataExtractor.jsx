// (c) Copyright 2013 Adobe Systems, Inc. All rights reserved.// author David Deraedt#include "../common/Utils.jsx"#include "PhotoshopCommons.jsx"var LayerDataExtractor = (function () {	/**	Exports all layers data of a given document to an array of objects	describing items and positions	@public	@param {Document} doc The document to export	@param {String} exportType Determines if layers should be converted to JPG or PNG files	(This value should use ExportType constants)	*/	var docName="";	var exportType;	function exportLayersData(doc, exportType){								docName = normalizeName(getFileNamePart(doc.name));		exportType = exportType;				var itemsData = processLayers(doc.layers, doc);				return itemsData;			}	function processLayers(layers, doc) {		var itemsData = [];		var n = layers.length;				var j;		for ( j = n-1 ; j >= 0 ; j--){						var l = layers[j];						// ignore invisible			if(l.visible == false) continue;			log(l.name + "is art layers? " + (l instanceof ArtLayer));			//groups			if(l instanceof ArtLayer==false) {								var groupData = processGroup(l);				itemsData.push(groupData);								groupData.items = processLayers(l.layers, doc);				continue;			}					// ignore adjustment layers			if(l.kind != LayerKind.NORMAL && l.kind != LayerKind.TEXT && l.kind != LayerKind.SOLIDFILL) continue;								// ignore empty			if(l.bounds[2]==0) continue;						var itemData = processLayer(l, doc);						itemsData.push(itemData);					}				return itemsData;			}	function processLayer(l, doc) {				doc.activeLayer = l;		var fileName = docName + "-" + normalizeName(l.name);		if(l.kind == LayerKind.SOLIDFILL) selectVisibleInVector (l);		else selectVisibleIn (l);				var sel = doc.selection;				var px = sel.bounds[0].value;		var py = sel.bounds[1].value;		var pw = sel.bounds[2].value - px;		var ph = sel.bounds[3].value - py;							var itemData = {				x:	px,				y:	py,				width: pw,				height: ph,				name: fileName,				ext: "png"							};				return itemData;	}	function processGroup(l) {				var name = normalizeName(l.name);						var groupData = {				x:	0,				y:	0,				width: 500,				height: 500,				name: name,				ext: null,				items:[]							};				return groupData;			}	var obj = {};	obj.exportLayersData = exportLayersData;	return obj;}());